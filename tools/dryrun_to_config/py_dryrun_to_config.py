import sys
import os
import argparse
import logging
import aci_config_tree

# Set argument parser
parser = argparse.ArgumentParser(
    description="Transforms a JSON file generated by ansible modules using --check flag into a JSON file with the correct schema required for a Cisco ACI config")
parser.add_argument(
    "--input", help="input file path (required)", required=True)
parser.add_argument(
    "--output", help="output file path (required)", required=True)
parser.add_argument(
    "--loglevel", help="logging level (optional, default is WARNING)", choices=["CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"])

args = parser.parse_args()

# Set logging
rootLogger = logging.getLogger()
rootLogger.setLevel(args.loglevel)

# Transform file
try:
    logging.info("Transforming input file {} into Cisco ACI config file {}".format(
        args.input, args.output))
    aci_config_tree.config_construct_tree(args.input, args.output)
except:
    logging.error("Exception triggered")
    sys.exit(-1)
