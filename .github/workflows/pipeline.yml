# This is a basic workflow to help you get started with Actions

name: pipeline-demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [github_actions]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  snapshot:
    # The type of runner that the job will run on
    runs-on: self-hosted
    container: adealdag/aci_cobra:4.2.3n

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Take an aci snapshot
        env:
          APIC_HOST: ${{ secrets.APIC_HOST }}
          APIC_USERNAME: ${{ secrets.APIC_USERNAME }}
          APIC_PASSWORD: ${{ secrets.APIC_PASSWORD }}
        run: |
          export no_proxy=$APIC_HOST,$no_proxy
          python ./tools/trigger_backup/py_trigger_backup.py

  ansible-dry-run:
    runs-on: self-hosted
    container: adealdag/ansible:latest

    steps:
      - uses: actions/checkout@v2

      - name: Run ansible playbook dry-run
        env:
          VAULT_KEY: ${{ secrets.VAULT_KEY }}
        run: |
          ansible --version
          echo $VAULT_KEY > vault.key
          ansible-playbook -i inventory.yaml --vault-password-file vault.key prod_app_marketplace.yaml --check
          rm vault.key

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: config-dump
          path: dryrun_data.json

  pre-change-validation:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: ansible-dry-run
    container: adealdag/python:3.9.10-mod

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: config-dump

      - name: Transform dry-run output to aci config
        run: |
          python ./tools/dryrun_to_config/py_dryrun_to_config.py --input dryrun_data.json --output config.json --loglevel INFO

      - name: Run pre-change validation on Nexus Dashboard Insights
        env:
          ND_HOST: ${{ secrets.ND_HOST }}
          ND_USERNAME: ${{ secrets.ND_USERNAME }}
          ND_PASSWORD: ${{ secrets.ND_PASSWORD }}
          ND_DOMAIN: ${{ secrets.ND_DOMAIN }}
        run: |
          export no_proxy=$ND_HOST,$no_proxy
          cat config.json
          python ./tools/run_prechange/py_run_pcv.py --name $GITHUB_SHA --igname dc_spain --site MLG01 --file ./config.json --loglevel INFO --allowUnsupportedObjectModification
